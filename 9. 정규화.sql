/*
0. 요구사항 분석
    - 벤치마킹
    - 개념적 설계 : 화면 제작에 필요한 데이터 추출 (ER-모델)
        - ER 모델 : 엔티티(테이블)의 속성(컬럼) 설계
    - 논리적 설계 : KEY 종류 설정
        - PRIMARY KEY : 모든 테이블에서 한개 이상 가짐
                        중복 없는 데이터 -> 이상 현상 방지
                        주로 숫자(자동 증가 Sequence) 사용
        - UNIQUE : 기본키를 잃어버린 상태에서 대체 가능
        - FOREIGN KEY : 다른 테이블의 기본키를 참조하여 서로 연결
    - 물리적 설계 : 실제 오라클에 저장, 테이블 설계
    
1. 정규화
    - 이상현상 발생하는 테이블 수정하여 정상으로 만드는 과정
        cf. 이상현상 : 불필요한 데이터 중복 -> 삽입, 수정, 삭제(데이터 관리) 문제 발생
                        -> NULL 입력, 일관성 훼손, 연쇄삭제
    - 데이터 일관성, 데이터 중복 최소화, 데이터 유연성 목적 -> 데이터 분해
    1) 함수 종속성
        - 테이블의 속성 간에 함수적으로 종속하는 성질
        - 속성 1의 값과 속성 2의 값이 1:1 매칭되는 의존 관계
            => A는 B를 결정하는 결정자 / B는 A에 종속
               A -> B
    2) 정규화 종류
    - 1정규형 : 반복 집합이 있을 때 반복 집합 제거
                ex. 학번    과목명       성적    =>   학번  과목명    성적
                    100  DB,데이터통신  92,90        100     DB      92
                                                    100  데이터통신  90
    - 2정규형 : 중복 제거, 복합키 사용하지 않고 테이블 분리
    
    - 3정규형 : 각 테이블에서 결정자 1개만 사용
    여러 테이블이 기본키로 순차적 연결(1:N이 아닌 1:1로 순차적 연결) 
*/
/*
1. 오라클 응용 프로그램
    - 응용프로그램 제작할 수 있는 언어 : PL/SQL
    - PL : 문법, SQL : 제어
2. 자바 연동 프로그램
    - 자바 코딩 
        - 한번 수행 : 생성자
        - 반복 수행(한 개의 기능 재사용) : 메소드화
    - 오라클 연결 순서
        1) 드라이버 등록 : 한번만 수행 -> 생성자
        2) 오라클 연결 : 요청시마다 코딩 -> 메소드화
        3) SQL 문장 제작
            - DML, DQL
            - 복잡한 쿼리문장 : 뷰
            - 정렬 : 인덱스
            - 반복 많은 문장 : 프로시저
            - 다른 테이블의 변경이 요구됨 : 트리거
            - 페이징 : 인라인뷰
            - 테이블이 많이 나눠질 때(조인) : 정규화
        4) SQL 문장 전송
        5) SQL 오라클에서 실행 후 결과값 받기
        6) 결과값 저장 ArrayList<VO>
        7) 오라클 연결 해제 : 요청시마다 코딩 -> 메소드화
3. 웹 연동 프로그램(웹 프로그래머)
    - 오라클 SQL 문장 -> DAO
    - 오라클 데이터 매칭 -> VO
    - JSP -> Java Server Page
    - HTML/CSS -> 화면 출력
*/